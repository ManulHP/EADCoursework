@page "/DeleteProject/{Id}/{ProjectType}"
@using Coursework.Data
@inject Coursework.Data.Project.ProjectService projectService
@inject NavigationManager NavigationManager

<h2>Delete Project</h2>
<hr />

<h3>Are you sure want to delete this?</h3>
<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label>Title:</label>
                <label>@obj.Title</label>
            </div>
            @if (ProjectType == "Workplace") { 
        <div class="form-group">
            <label>Comapany Name:</label>
            <label>@obj.CompanyName</label>
        </div>
            }
            <div class="form-group">
                <label>Description:</label>
                <label>@obj.Description</label>
            </div>
            <div class="form-group">
                <label>Project type:</label>
                <label>@obj.ProjectType</label>
            </div>

        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@DeleteEmployee" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public String Id { get; set; }
    [Parameter]
    public String ProjectType { get; set; }
    Coursework.Data.Project.Project obj = new Coursework.Data.Project.Project();
    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => projectService.GetProjectByIdAsync(Convert.ToInt32(Id)));
    }
    protected async void DeleteEmployee()
    {
        await projectService.DeleteTicketAsync(obj);
        NavigationManager.NavigateTo("ViewPorject");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("ViewPorject");
    }
}