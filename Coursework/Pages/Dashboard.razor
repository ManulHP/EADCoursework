@page "/Dash/{Id}/{ProType}"
@using Coursework.Data
@inject Coursework.Data.Ticket.TicketService ticketService
@inject NavigationManager NavigationManager
@inject Microsoft.JSInterop.IJSRuntime JS
@using  System.IO;
@inject ExportService exportService
@inject Coursework.Data.Project.ProjectService projectService

<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary" type="button" @onclick="ButtonClick">Add new ticket</button>
        <button class="btn btn-primary" type="button" @onclick="ExportToPdf">Export Date</button>
    </Authorized>
    <NotAuthorized>
        <a class="btn btn-primary" href="Identity/Account/Register">Register</a>
        <a class="btn btn-primary" href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

<div style="padding-bottom:10px"></div>


@if (TicketObj is null)
{
    <p><em>Loading... !</em></p>
}
else
{

    <table class="table table-borderless table-striped table-fixed">
        <thead class="thead-dark">
            <tr>
                <th style="width:200px">Title</th>
                <th style="width:550px">Description</th>
                @{
                    if (ProType == "Workplace")
                    {
                        <th style="width:250px">Assignee</th>
                    }
                }
                <th style="width:150px">Status</th>
                <th style="width:200px">Due Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in TicketObj)
            {
                if (emp.Status == "New")
                {
            <tr>
                <td>@emp.Title</td>
                <td>@emp.Description</td>
                @{
                    if (ProType == "Workplace")
                    {
                        <td>@emp.Assignee</td>
                    }
                }
                <td>@emp.Status</td>
                <td>@emp.DueDate</td>
                <td class="text-right">
                    <a class="btn btn-primary btn-sm" href="EditTicket/@emp.Id/@ProType" role="button">Edit</a>
                    <a class="btn btn-danger btn-sm" href="DeleteTicket/@emp.Id/@ProType" role="button">Delete</a>
                </td>
            </tr>
                }
            }
        </tbody>
    </table>

    <table class="table table-borderless table-striped table-fixed">
        <thead class="thead-dark">
            <tr>
                <th style="width:200px">Title</th>
                <th style="width:550px">Description</th>
                @{
                    if (ProType == "Workplace")
                    {
                        <th style="width:250px">Assignee</th>
                    }
                }
                <th style="width:150px">Status</th>
                <th style="width:200px">Due Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in TicketObj)
            {
                if (emp.Status == "In-progress")
                {
            <tr>
                <td>@emp.Title</td>
                <td>@emp.Description</td>
                @{
                    if (ProType == "Workplace")
                    {
                        <td style="width:250px">@emp.Assignee</td>
                    }
                }
                <td>@emp.Status</td>
                <td>@emp.DueDate</td>
                <td class="text-right">
                    <a class="btn btn-primary btn-sm" href="EditTicket/@emp.Id/@ProType" role="button">Edit</a>
                    <a class="btn btn-danger btn-sm" href="DeleteTicket/@emp.Id/@ProType" role="button">Delete</a>
                </td>
            </tr>
                }
            }
        </tbody>
    </table>

    <table class="table table-borderless table-striped table-fixed">
        <thead class="thead-dark">
            <tr>
                <th style="width:200px">Title</th>
                <th style="width:550px">Description</th>
                @{
                    if (ProType == "Workplace")
                    {
                        <th style="width:250px">Assignee</th>
                    }
                }
                <th style="width:150px">Status</th>
                <th style="width:200px">Due Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in TicketObj)
            {
                if (emp.Status == "Closed")
                {
                    <tr>
                        <td>@emp.Title</td>
                        <td>@emp.Description</td>
                        @{
                            if (ProType == "Workplace")
                            {
                                <td>@emp.Assignee</td>
                            }
                        }
                        <td>@emp.Status</td>
                        <td>@emp.DueDate</td>
                        <td class="text-right">
                            <a class="btn btn-primary btn-sm" href="EditTicket/@emp.Id/@ProType" role="button">Edit</a>
                            <a class="btn btn-danger btn-sm" href="DeleteTicket/@emp.Id/@ProType" role="button">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>


        }



        @code {
            [Parameter]
            public String Id { get; set; }
            [Parameter]
            public String ProType { get; set; }

            List<Coursework.Data.Ticket.Ticket> TicketObj;
            private Coursework.Data.Ticket.Ticket[] TicketsArray;

            protected override async Task OnInitializedAsync()
            {
                TicketObj = await Task.Run(() => ticketService.GetTicketByProjectIdAsync(Id)); ;
                TicketsArray = await Task.Run(() => ticketService.GetTicketByProjectIdReportAsync(Id));
            }


            protected async void ButtonClick()
            {
                NavigationManager.NavigateTo($"/AddTicket/{Id}/{ProType}");
            }

            protected async Task ExportToPdf()
            {
                using (MemoryStream excelStream = exportService.CreatePdf(TicketsArray))
                {
                    await JS.SaveAs("Ticket_Summary.pdf", excelStream.ToArray());
                }
            }

        }
